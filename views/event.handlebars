<div class="container" id="eventContainer" data-event-id="{{event._id}}">
  <!-- Event Details -->
  <div class="row justify-content-center mt-5">
    <div class="col-md-8">
      <div class="card border-0 shadow-lg">
        <div class="card-body text-center">
          <div class="row">
            <div class="col-md-6">
              <img src="https://cloudfront-us-east-2.images.arcpublishing.com/reuters/7YKAJ3JWWJNL7PGRPZKY2TEU5Y.jpg" class="img-fluid event-image " alt="{{event.eventName}} Image">
            </div>
            <div class="col-md-6">
              <h1 class="card-title">{{event.eventName}}</h1>
              <p class="card-text"><strong>Location:</strong> {{event.eventLocation}}</p>
              <p class="card-text"><strong>Description:</strong> {{event.description}}</p>
              <p class="card-text"><strong>Date:</strong> {{event.eventDate}}</p>
              <p class="card-text"><strong>Time:</strong> {{event.eventTime}}</p>
              <p class="card-text"><strong>Cost:</strong> ${{event.cost}}</p>
              {{#if event.link}}
                <p class="card-text"><strong>Link:</strong> <a href="{{event.link}}" target="_blank">{{event.link}}</a></p>
              {{/if}}
              <p>Posted by: {{event.eventUsername}}</p>
              <button type="button" class="btn btn-primary btn-interested btn-block">Interested</button>
              <p class="mt-3 interest-count">{{event.interestCount}} users are interested in this event!</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<div class="container">
  <!-- Comments Section -->
  <div class="row justify-content-center mt-5">
    <div class="col-md-8">
      <div class="card border-0 shadow-lg">
        <div class="card-body">
          <h3 class="card-title text-center mb-4">Comments</h3>
          <!-- Form for adding a new comment -->
          <form id="commentForm" action="/addComment/{{event._id}}" method="POST">
            <div class="form-group">
              <textarea class="form-control" id="commentText" name="commentText" rows="3" placeholder="Add your comment here"></textarea>
            </div>
            <!-- You might add more fields for user info, etc., if needed -->
            <button type="submit" class="btn btn-primary btn-block">Submit</button>
          </form>

          <!-- Display existing comments -->
          <div class="mt-4 commentSection">
            {{#each event.comments}}
              <div class="comment bg-light p-3 rounded mb-3" data-comment-id="{{this.comment_id}}">
                <p class="mb-1">{{this.commentText}}</p>
                <p class="text-muted small">Posted by: {{this.username}}</p>

           
    
                <div class="tab-content" id="replyTabContent{{this.comment_id}}">
                  <!-- Tab for displaying existing replies -->
                  <div class="tab-pane fade show active" id="reply{{this.comment_id}}-replies" role="tabpanel" aria-labelledby="reply{{this.comment_id}}-replies-tab">
                  
                  
                
    <!-- Button to toggle replies -->
                  <button class="btn btn-sm btn-info toggleReplies">Show Replies</button>
                  <div class="replies mt-3" style="display: none; padding-left: 20px;">
                  
 <form class="replyForm mt-2" action="/addReply/{{../event._id}}/{{this.comment_id}}" method="POST">
            <div class="input-group mb-3">
                  <textarea class="form-control" name="replyText" rows="2" placeholder="Reply to this comment"></textarea>
                  <div class="input-group-append">
                    <button type="submit" class="btn btn-sm btn-primary">Reply</button>
                  </div>
                </div>
              </form>
                    {{#each this.replies}}
                      <div class="reply bg-light p-2 rounded mb-2">
                        <p>{{this.replyText}}</p>
                        <p class="text-muted small">Replied by: {{this.username}}</p>
                      </div>
                    {{/each}}
                    
                  </div>
                  </div>

                 
                </div>
              </div>
            {{/each}}
          </div>

        </div>
      </div>
    </div>
  </div>
</div>

<script>
$(document).ready(function () {
  var eventId = $('#eventContainer').data('event-id');

  // Check if the user is already interested in the event
  $.ajax({
    type: 'GET',
    url: '/checkInterstedUser/' + eventId,
    success: function (response) {
      if (response.interstedUser == true) {
        // If the user is already interested, update the button color to green
        $('.btn-interested').addClass('btn-success');
      }
    },
    error: function (error) {
      console.error('Error checking interest:', error);
      // Handle errors here
    }
  });
  // Submit comment form
  $('#commentForm').submit(function (event) {
    event.preventDefault(); // Prevent the default form submission

    var commentText = $('#commentText').val(); // Get the comment text from the form
    var eventId = $('#eventContainer').data('event-id'); // Retrieve the event ID from the data attribute

    // AJAX POST request to submit the comment
    $.ajax({
      type: 'POST',
      url: '/addComment/' + eventId,
      data: { commentText: commentText },
      success: function (response) {
        var newComment = '<div class="comment bg-light p-3 rounded mb-3"' + 'data-comment-id="' + response.commentId + '"">' + 
  '<p class="mb-1">' + response.commentText + '</p>' +
  '<p class="text-muted small">Posted by: ' + response.username + '</p>' +

  '</div>';


        var $newComment = $(newComment).hide(); // Hide the new comment initially
        $('.commentSection').append($newComment);

        // Scroll to the new comment after it's appended
        $newComment.slideDown('fast', function () {
          $('html, body').animate({
            scrollTop: $(this).offset().top
          }, 'slow');

        });

        // Clear the comment input field
        $('#commentText').val('');
      },
      error: function (error) {
        console.error('Error adding comment:', error);
        // Handle errors here (e.g., display an error message)
      }
    });
  });
   // Submit comment form
  $(document).on('submit', '.replyForm', function (event) {
    event.preventDefault(); // Prevent the default form submission

    var replyText = $(this).find('textarea[name="replyText"]').val(); // Get the reply text from the form
    var eventId = $('#eventContainer').data('event-id'); // Retrieve the event ID from the data attribute
  var commentId = $(this).closest('.comment').data('comment-id'); // Get comment_id from the closest '.comment'
    // AJAX POST request to submit the comment
    console.log(replyText);
    $.ajax({
      type: 'POST',
      url: '/addReply/' + eventId + '/'+ commentId,
      data: { replyText: replyText },
      success: function (response) {
          var newReply = '<div class="reply bg-light p-2 rounded mb-2">' +
          '<p>' + response.replyText + '</p>' +
          '<p class="text-muted small">Replied by: ' + response.username + '</p>' +
          '</div>';

        var $newReply = $(newReply).hide();
        $(event.target).closest('.comment').find('.replies').append($newReply);

    $newReply.slideDown('fast', function () {
    // Scroll to the new reply after it's appended and shown
    $('html, body').animate({
      scrollTop: $repliesSection.offset().top + $repliesSection.height()
    }, 'slow');
  });

    $(event.target).find('textarea[name="replyText"]').val('');
      },
      error: function (error) {
        console.error('Error adding reply:', error);
        // Handle errors here (e.g., display an error message)
      }
    });
  });

});
</script>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const interestedButton = document.querySelector('.btn-interested');

  if (interestedButton) {
    interestedButton.addEventListener('click', function (event) {
      try {
        var eventId = $('#eventContainer').data('event-id'); // Retrieve the event ID from the data attribute
        
        // Check if eventId is retrieved successfully
        if (!eventId) {
          console.error('Error: eventId is not retrieved.');
          return;
        }

        // AJAX POST request to toggle the interest button
        $.ajax({
          type: 'POST',
          url: '/toggleInterestButton/' + eventId,
          success: function (response) {
            // Handle the success response from the server if needed
            console.log(response);

            // Toggle the 'btn-success' class to change the button color
            interestedButton.classList.toggle('btn-success');

            // Update the interestCount in the DOM
            var interestCountElement = document.querySelector('.interest-count');
            if (interestCountElement) {
              interestCountElement.textContent = response.interestCount + ' users are interested in this event!';
            }
          },
          error: function (error) {
            console.error('Error toggling button:', error);
            // Handle errors here (e.g., display an error message)
          }
        });
      } catch (err) {
        console.error('Unexpected error:', err);
      }
    });
  }
});



$(document).ready(function () {
  // Toggle replies when clicking the button
  $(document).on('click', '.toggleReplies', function () {
    // Find the closest comment container and toggle the replies section within it
    $(this).closest('.comment').find('.replies').slideToggle();
  });
});
$(document).ready(function () {
  // Toggle replies when clicking the button
  $(document).on('click', '.toggleForm', function () {
    // Find the closest comment container and toggle the replies section within it
    $(this).closest('.comment').find('.replyForm').slideToggle();
  });
});
</script>